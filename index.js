import dotenv from 'dotenv/config'
import { Telegraf, Markup } from 'telegraf'
import connection from './db.js';
import { message } from 'telegraf/filters';

const bot = new Telegraf(process.env.BOT_TOKEN);

bot.start(async(ctx) => {
    await ctx.reply(
        '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!üëã\n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ —à–∫–æ–ª–µ ¬´–ê–≤–æ–≥–∞–¥—Ä–æ¬ª üß™üôÇ\n–ï—Å–ª–∏ –≤—ã —É–∂–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏–ª–∏ —Ç–æ–ª—å–∫–æ —Ä–∞–∑–¥—É–º—ã–≤–∞–µ—Ç–µ ü§î, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ—Ä–æ—Ç–∫—É—é –∑–∞—è–≤–∫—É üìã. –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏, –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã üí¨ –∏ –ø–æ–º–æ–∂–µ–º –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ! ‚ú®',
        Markup.keyboard([
            [Markup.button.webApp('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', 'https://avogadro-online-school.netlify.app')],
        ])
        .resize()
    );
});

bot.on(message('web_app_data'), async (ctx) => {
    //console.log(Object.values(JSON.parse(ctx.message.web_app_data.data)))
    // console.log(ctx.message.web_app_data)
    if (ctx.message.web_app_data) {
            let application = Object.values(JSON.parse(ctx.message.web_app_data.data))
            let phone 
            let application_list = application.map(
                (i, index)=>{
                    if(index===1){
                        if (typeof i === 'string' && i.startsWith('8')) {
                            i = '+7' + i.slice(1);
                            phone = i
                        }
                    }
                    return i+'\n'
                }
            )
            let application_str = application_list.join("")
            try {
                await connection.execute("INSERT INTO students (username, phone, email, course_name, format, telega_id) VALUES (?,?,?,?,?,?)", [...application_list,  ctx.chat.id])

            } catch (error) {
                console.log("cant save student "+ error)
            }
            await ctx.reply("üí• –°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –∑–∞—è–≤–∫—É! üí•\n–ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.\n–ñ–µ–ª–∞–µ–º –æ—Ç–ª–∏—á–Ω–æ–≥–æ –¥–Ω—è –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è! üòäüåû")
            setTimeout(async ()=>{
                await bot.telegram.sendMessage(process.env.ADMIN_ID, `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n${application_str}`, 
                    // {
                    //     reply_markup: {
                    //         inline_keyboard: [
                    //             [
                    //               { text: '–ó–∞—á–∏—Å–ª–µ–Ω', callback_data: `accept_${phone}` },
                    //               { text: '–î—É–º–∞–µ—Ç', callback_data: `thinking_${phone}` },
                    //               { text: '–û—Ç–∫–∞–∑–∞–ª—Å—è', callback_data: `rejected_${phone}` }
                    //             ]
                    //           ]
                    //     }
                    // }
                )
            }, 1000)
    }

  });

//   bot.on('callback_query', async (ctx) => {
//     const data = await ctx.callbackQuery.data.split("_"); // tut delaem massiv iz dati
//     if (data[0]=='accept') {
//         try {
//             console.log(data[1])
//             await connection.execute("UPDATE students SET approved = ? WHERE phone = ?", ["–ó–∞—á–∏—Å–ª–µ–Ω",  data[1]])
    
//         } catch (error) {
//             console.log("cant update student "+ error)
//         }
//         await ctx.reply(`–í—ã –Ω–∞–∂–∞–ª–∏: ${data}.`);
//     }
    
//     await ctx.answerCbQuery();
//   });
 
//   bot.command('btns', async(ctx) => {
//     try {
//         await ctx.reply('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:', Markup.inlineKeyboard([
//             Markup.button.callback('–ö–Ω–æ–ø–∫–∞ 1', 'callback_data_1'),
//             Markup.button.url('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ', 'https://ya.ru'),
//             Markup.button.webApp('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ', 'https://dzen.ru')
//         ]).resize());
//     } catch (error) {
//         console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–Ω–æ–ø–æ–∫:', error);
//     }
//   });

// bot.action('callback_data_1', async(ctx) => {
//     await ctx.reply('–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫–∞ 1');
//     await ctx.answerCbQuery()
//   });
//   {
//     button_text: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É',
//     data: '{"name":"–î–∏–Ω–∏—Å –ì–∏–±–∞–¥—É–ª–ª–∏–Ω","phone":"89603827499","email":"denwayde09@gmail.com","selectValue":"2"}'
//   }

bot.launch();